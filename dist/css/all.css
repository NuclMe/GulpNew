@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap");
body,
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
fieldset,
button,
input,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0; }

fieldset,
img {
  border: 0; }

img,
object,
embed {
  vertical-align: bottom; }

main {
  display: block;
  margin-bottom: 30px; }

address,
caption,
cite,
code,
dfn,
em,
th,
var {
  font-style: normal;
  font-weight: normal; }

ol,
ul {
  list-style: none; }

caption,
th {
  text-align: left; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%; }

q:before,
q:after {
  content: ''; }

a * {
  cursor: pointer;
  text-decoration: none; }

input,
textarea {
  outline: none;
  resize: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?facfj0");
  src: url("../fonts/icomoon.eot?facfj0#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?facfj0") format("truetype"), url("../fonts/icomoon.woff?facfj0") format("woff"), url("../fonts/icomoon.svg?facfj0#icomoon") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block; }

[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

html {
  height: 100%;
  min-width: 320px;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  font: 14px/1.2 "Roboto", sans-serif;
  height: 100%;
  min-width: 320px;
  position: relative;
  color: #fff; }

a {
  color: #fff;
  text-decoration: none; }

input {
  outline: none;
  -webkit-appearance: none;
  border-radius: 0; }

* {
  outline: none; }

* {
  box-sizing: border-box; }

*:before,
*:after {
  box-sizing: border-box; }

* ::-moz-selection {
  background: #2600ff;
  color: #fff; }

* ::selection {
  background: #2600ff;
  color: #fff; }

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #fff; }

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: #fff;
  opacity: 1; }

input::-moz-placeholder,
textarea::-moz-placeholder {
  color: #fff;
  opacity: 1; }

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #fff; }

input:focus::-webkit-input-placeholder,
textarea:focus::-webkit-input-placeholder {
  color: transparent; }

input:focus:-moz-placeholder,
textarea:focus:-moz-placeholder {
  color: transparent; }

input:focus::-moz-placeholder,
textarea:focus::-moz-placeholder {
  color: transparent; }

input:focus:-ms-input-placeholder,
textarea:focus:-ms-input-placeholder {
  color: transparent; }

input.placeholder,
textarea.placeholder {
  color: #fff !important; }

.wrapper {
  display: table;
  width: 100%;
  height: 100%;
  table-layout: fixed;
  overflow: hidden;
  position: relative; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
